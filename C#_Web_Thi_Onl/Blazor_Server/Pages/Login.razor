@page "/"
@using Blazor_Server.Services
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using System.IdentityModel.Tokens.Jwt
@inject NavigationManager Navigation
@inject AuthSerrvice AuthService
@layout LoginLayout 
@inject ProtectedSessionStorage SessionStorage

<div class="flex items-center justify-center h-screen bg-gray-100">
    <div class="bg-white p-8 rounded-2xl shadow-lg w-96">
        <h2 class="text-2xl font-semibold text-center mb-6 text-gray-700">Đăng nhập</h2>

        <div class="mb-4">
            <label class="block text-gray-600 font-medium">Tên đăng nhập</label>
            <input type="text" @bind="username"
                   class="w-full px-4 py-2 mt-1 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400" />
        </div>

        <div class="mb-4">
            <label class="block text-gray-600 font-medium">Mật khẩu</label>
            <input type="password" @bind="password"
                   class="w-full px-4 py-2 mt-1 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400" />
        </div>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="flex items-center bg-red-100 border-l-4 border-red-500 text-red-700 p-3 mb-4 rounded-lg">
                <svg class="w-6 h-6 mr-2 text-red-500" fill="none" stroke="currentColor" stroke-width="2"
                     viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round"
                          d="M12 9v2m0 4h.01M5.07 5.07a10.05 10.05 0 0113.86 0M12 3v.01M3 12h.01M12 21v.01M21 12h.01"></path>
                </svg>
                <span>@errorMessage</span>
            </div>
        }

        <button @onclick="HandleLogin"
                class="w-full bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 rounded-lg transition duration-200">
            Đăng nhập
        </button>
    </div>
</div>

@code {
    private string username;
    private string password;
    private string errorMessage;

    private async Task HandleLogin()
    {
        var token = await AuthService.Login(username, password);

        if (!string.IsNullOrEmpty(token))
        {
            var handler = new JwtSecurityTokenHandler();
            var jsonToken = handler.ReadToken(token) as JwtSecurityToken;
            var roleIdClaim = jsonToken?.Claims.FirstOrDefault(c => c.Type == "Role");

            if (roleIdClaim != null)
            {
                await SessionStorage.SetAsync("userRole", roleIdClaim.Value);
                Navigation.NavigateTo("/", forceLoad: true); // Reload trang để áp dụng Layout mới
            }
        }
        else
        {
            errorMessage = "Tên đăng nhập hoặc mật khẩu không đúng!";
        }
    }
}