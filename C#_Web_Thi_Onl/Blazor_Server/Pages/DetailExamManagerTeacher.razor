@page "/DetailExamanager/{id:int}"
@using Blazor_Server.Services
@layout TeacherLayout
@inject NavigationManager NavManager
@inject ExammanagementService exammanagement
<div class="border bg-primary-subtle p-3 rounded">
    <div class="row">
        <div class="col-md-4">
            <h6 class="text-muted">Số lượng học sinh:</h6>
            <h5 class="fw-bold text-primary"></h5>
        </div>
        <div class="col-md-4">
            <h6 class="text-muted">Tên bài thi:</h6>
            <h5 class="fw-bold"></h5>
        </div>
        <div class="col-md-4">
            <h6 class="text-muted">Thời gian:</h6>
            <h5 class="fw-bold text-success"></h5>
        </div>
    </div>
</div>

<div class="d-flex p-2 ">
    <div class="input-group mb-1 ms-auto w-auto">
        <span class="input-group-text bg-white rounded-0 border-0 border-bottom">
            <i class="bi bi-search"></i>
        </span>
        <input class="form-control rounded-0 border-0 border-bottom shadow-none"
               type="search" placeholder="Tìm kiếm..."
               @bind="searchTerm" @bind:event="oninput"
               aria-label="Search">
    </div>
</div>
<table class="table table-borderless rounded text-center">
    <thead class="table-secondary ">
        <tr>
            <td scope="col">Mã học sinh</td>
            <td scope="col">Tên học sinh</td>
            <td scope="col">Thời gian</td>
            <td scope="col">Trạng thái</td>
            <td scope="col">Hành động</td>
        </tr>
    </thead>
    <tbody>
        @if (FilteredExams != null && FilteredExams.Any())
        {
            @for (int i = 0; i < FilteredExams.Count(); i++)
            {
                var item = FilteredExams.ElementAt(i);
                <tr>
                    <td>@item.codeStudent</td>
                    <td>@(string.IsNullOrWhiteSpace(item.Namestudent) ? "Không có dữ liệu" : item.Namestudent)</td>
                    <td>@(string.IsNullOrWhiteSpace(item.checktime) ? "Chưa có thời gian" : item.checktime)</td>
                    <td>
                        @if (item.ExamStatus == "Đã vào thi")
                        {
                            <span class="badge bg-success">Đã vào thi</span>
                        }
                        else
                        {
                            <span class="badge bg-danger">Chưa vào thi</span>
                        }
                    </td>
                    <td>
                        <button>Dừng thi</button>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="5" class="text-center text-muted">Không có dữ liệu học sinh</td>
            </tr>
        }
    </tbody>
</table>

@code {
    [Parameter]
    public int id { get; set; }
    private List<ExammanagementService.ListExam> listExams = new();
    private string searchTerm = "";

    private IEnumerable<ExammanagementService.ListExam> FilteredExams =>
        string.IsNullOrWhiteSpace(searchTerm)
        ? listExams
        : listExams.Where(e => e.Namestudent.Contains(searchTerm, StringComparison.OrdinalIgnoreCase));
    protected override async Task OnInitializedAsync()
    {
        listExams = await exammanagement.GetlistStudent(id);
    }
}
