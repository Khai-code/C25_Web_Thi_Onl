@page "/His"
@using Blazor_Server.Services
@using Blazored.TextEditor
@using Data_Base.V_Model
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using System.IdentityModel.Tokens.Jwt
@using static Blazor_Server.Services.Test
@using static Blazor_Server.Services.Package_Test_ERP
@using static Blazor_Server.Services.HisService
@inject NavigationManager Navigation
@inject Notification notification
@layout StudentLayout
@inject ProtectedSessionStorage SessionStorage
@inject IJSRuntime JSRuntime
@inject Blazor_Server.Services.Test TestService
@inject Blazor_Server.Services.HisService his
@inject Blazored.Toast.Services.IToastService toastService

<h2 class="text-center text-primary mb-4">🎓 KẾT QUẢ BÀI THI</h2>

@if (v_Test != null)
{
    <div class="card shadow p-4 mb-4">
        <div class="row mb-3">
            <div class="col-md-6 mb-2">
                <strong>👤 Họ tên học sinh:</strong>
                <div class="text-muted">@v_Test.Full_Name</div>
            </div>
            <div class="col-md-6 mb-2">
                <strong>🏫 Lớp:</strong>
                <div class="text-muted">@v_Test.Class_Name</div>
            </div>
            <div class="col-md-6 mb-2">
                <strong>📘 Môn:</strong>
                <div class="text-muted">@v_Test.Subject_Name</div>
            </div>
            <div class="col-md-6 mb-2">
                <strong>📝 Mã bài thi:</strong>
                <div class="text-muted">@v_Test.Test_Code</div>
            </div>
            <div class="col-md-6 mb-2">
                <strong>📦 Mã gói đề:</strong>
                <div class="text-muted">@v_Test.Package_Code</div>
            </div>
            <div class="col-md-6 mb-2">
                <strong>⏱️ Thời gian làm bài:</strong>
                <div class="text-muted">@v_Test.Actual_Execution_Time phút</div>
            </div>

            @if (PackageTypeId != 1)
            {
                <div class="col-md-4 mb-2">
                    <strong>⭐ Điểm số:</strong>
                    <div class="text-success fw-bold">@v_Test.Score</div>
                </div>
                <div class="col-md-4 mb-2">
                    <strong>✅ Số câu đúng:</strong>
                    <div class="text-success">@correct</div>
                </div>
                <div class="col-md-4 mb-2">
                    <strong>❌ Số câu sai:</strong>
                    <div class="text-danger">@wrong</div>
                </div>
            }
        </div>
    </div>
}

<div class="text-center">
    <button class="btn btn-outline-secondary px-4" @onclick="Exit">
        <i class="bi bi-box-arrow-left"></i> Thoát
    </button>
</div>


@code {
    public V_Test v_Test = new V_Test();
    public int TestId;
    public int PackageTypeId;
    public int correct;
    public int wrong;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            var testIdReq = await SessionStorage.GetAsync<int>("TestId");

            if (!testIdReq.Success)
            {
                Navigation.NavigateTo("/Test");
                return;
            }
            TestId = testIdReq.Value;

            var PackageTypeIdReq = await SessionStorage.GetAsync<int>("PackageTypeId");
            if (!PackageTypeIdReq.Success)
            {
                Navigation.NavigateTo("/Test");
                return;
            }
            PackageTypeId = PackageTypeIdReq.Value;

            await GetExamHis(TestId, PackageTypeId);

            correct = (int)((v_Test.Score * v_Test.Total_Questions) / 10);
            wrong = v_Test.Total_Questions - correct;

        }
        catch (Exception ex)
        {
            toastService.ShowError("Lỗi: " + ex);
        }
    }

    public async Task GetExamHis(int testId, int PackageTypeId)
    {
        try
        {
            if(testId <= 0)
            {
                toastService.ShowError("Lỗi: Không xác định được bài thi");
                return;
            }

            v_Test = await his.GetVTest(testId, PackageTypeId);

        }
        catch (Exception ex)
        {
            toastService.ShowError("Lỗi: " + ex);
        }
    }

    private void Exit()
    {
        Navigation.NavigateTo("/StudentLayout",forceLoad:true);
    }
}
