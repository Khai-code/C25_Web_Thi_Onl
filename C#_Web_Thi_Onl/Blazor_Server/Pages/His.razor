@page "/His"
@using Blazor_Server.Services
@using Blazored.TextEditor
@using Data_Base.V_Model
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using System.IdentityModel.Tokens.Jwt
@using static Blazor_Server.Services.Test
@using static Blazor_Server.Services.Package_Test_ERP
@using static Blazor_Server.Services.HisService
@inject NavigationManager Navigation
@inject Notification notification
@layout StudentLayout
@inject ProtectedSessionStorage SessionStorage
@inject IJSRuntime JSRuntime
@inject Blazor_Server.Services.Test TestService
@inject Blazor_Server.Services.HisService his
@inject Blazored.Toast.Services.IToastService toastService


<h2>KẾT QUẢ BÀI THI</h2>

<div class="info">
    <label>Họ tên học sinh:</label>
    <span>@v_Test.Full_Name</span>
</div>

<div class="info">
    <label>Lớp:</label>
    <span>@v_Test.Class_Name</span>
</div>

<div class="info">
    <label>Môn:</label>
    <span>@v_Test.Subject_Name</span>
</div>

<div class="info">
    <label>Mã bài thi:</label>
    <span>@v_Test.Test_Code</span>
</div>

<div class="info">
    <label>Mã gói đề:</label>
    <span>@v_Test.Package_Code</span>
</div>

<div class="info">
    <label>Điểm số:</label>
    <span>@v_Test.Score</span>
</div>

<div class="info">
    <label>Số câu đúng:</label>
    <span>(@v_Test.Score * @v_Test.Total_Questions) / 10</span>
</div>

<div class="info">
    <label>Số câu sai:</label>
    <span>@v_Test.Total_Questions - ((@v_Test.Score * @v_Test.Total_Questions) / 10)</span>
</div>

<div class="info">
    <label>Thời gian làm bài:</label>
    <span>@v_Test.Actual_Execution_Time</span>
</div>

<div style="margin-top: 20px;">
    <button class="btn btn-secondary" @onclick="Exit">Thoát</button>
</div>

@code {
    public V_Test v_Test = new V_Test();
    public int TestId;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var testIdReq = await SessionStorage.GetAsync<int>("TestId");

            if (!testIdReq.Success)
            {
                Navigation.NavigateTo("/Test");
                return;
            }
            TestId = testIdReq.Value;

            GetExamHis(TestId);
        }
        catch (Exception ex)
        {
            toastService.ShowError("Lỗi: " + ex);
        }
    }

    public async Task GetExamHis(int testId)
    {
        try
        {
            if(testId <= 0)
            {
                toastService.ShowError("Lỗi: Không xác định được bài thi");
                return;
            }

            v_Test = await his.GetVTest(testId);

        }
        catch (Exception ex)
        {
            toastService.ShowError("Lỗi: " + ex);
        }
    }

    private void Exit()
    {
        Navigation.NavigateTo("/StudentLayout");
    }
}
